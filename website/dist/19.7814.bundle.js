(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{34:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=i(n(6)),a=i(n(5)),r=i(n(4)),d=i(n(3)),u=i(n(2)),o=i(n(1)),c=n(7);function i(e){return e&&e.__esModule?e:{default:e}}var f=function(e){function t(){return(0,a.default)(this,t),(0,d.default)(this,(t.__proto__||(0,l.default)(t)).apply(this,arguments))}return(0,u.default)(t,e),(0,r.default)(t,[{key:"render",value:function(){return o.default.createElement("div",null,o.default.createElement("strong",null,"基本结构"),o.default.createElement("pre",null,o.default.createElement("code",null,'[{\n    id: "-1",\n    path: "/",\n    name: "简介",\n    loader: () => import(\'./home/Home\')\n},{\n    id: "0",\n    path: "/getting_started",\n    name: "开始使用",\n    loader: () => import(\'./getting-started/GettingStarted\')\n}, {\n    id: "1",\n    path: "/sidenav_option",\n    name: "配置",\n    loader: () => import(\'./sidenav-option/SidenavOption\'),\n    children:[{\n        id:"10",\n        path:"/data",\n        name:"Data",\n        loader:()=>import("./sidenav-option/modules/data/Data")\n    }]\n}]')),o.default.createElement("strong",null,"必须属性"),o.default.createElement("pre",null,o.default.createElement("code",null,"id:string 不可重复")),o.default.createElement("pre",null,o.default.createElement("code",null,"path:string 定义路由使用的路径")),o.default.createElement("pre",null,o.default.createElement("code",null,"name:string 模块名称")),o.default.createElement("pre",null,o.default.createElement("code",null,"loader:func 路由对应的模块,函数返回",o.default.createElement("a",{href:"javascript:;",onClick:function(){return(0,c.jumpToById)({routeId:"32"})}},"路由模块"),"的引入")),o.default.createElement("strong",null,"其他属性"),o.default.createElement("pre",null,o.default.createElement("code",null,"sidenav:bool 是否在侧边导航上面显示该路由,一般用于定义包括修改等不需要在侧边展示的页面的路由")),o.default.createElement("pre",null,o.default.createElement("code",null,'children:array "children"对应于配置中的',o.default.createElement("a",{href:"javascript:;",onClick:function(){return(0,c.jumpToById)({routeId:"12"})}},"nestedProp"),"属性值,包含该路由下面的后代路由")),o.default.createElement("pre",null,o.default.createElement("code",null,"*:any 可以有任意多的任意的自定义属性")))}}]),t}(o.default.Component);t.default=f}}]);
//# sourceMappingURL=19.7814.bundle.js.map