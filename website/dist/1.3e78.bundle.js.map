{"version":3,"sources":["webpack:///./src/getting-started/GettingStarted.jsx"],"names":["GettingStarted","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;IACqBA,c;;;;;;;;;;iCACR;AACL,mBAAQ;AAAA;AAAA;AACJ;AAAA;AAAA;AAAA;AAAA,iBADI;AAIJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBAJI;AAmCJ;AAAA;AAAA;AAAA;AAAA,iBAnCI;AAsCJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBAtCI;AAiDJ;AAAA;AAAA;AAAA;AAAA,iBAjDI;AAoDJ,wDApDI;AAuDJ;AAAA;AAAA;AAAA;AAAA,iBAvDI;AA4DJ;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA,iBA5DI;AA8IJ;AAAA;AAAA;AAAA;AAAA,iBA9II;AAiJJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBAjJI;AAsJJ;AAAA;AAAA;AAAA;AAAA,iBAtJI;AAyJJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBAzJI;AA8JJ;AAAA;AAAA;AAAA;AAAA,iBA9JI;AAiKJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBAjKI;AA6LJ;AAAA;AAAA;AAAA;AAAA,iBA7LI;AAgMJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBAhMI;AA4MJ;AAAA;AAAA;AAAA;AAAA,iBA5MI;AA+MJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBA/MI;AA0NJ;AAAA;AAAA;AAAA;AAAA,iBA1NI;AA6NJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBA7NI;AA0OJ;AAAA;AAAA;AAAA;AAAA,iBA1OI;AA6OJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBA7OI;AAkPJ;AAAA;AAAA;AAAA;AAAA,iBAlPI;AAqPJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBArPI;AA4QJ;AAAA;AAAA;AAAA;AAAA,iBA5QI;AA+QJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBA/QI;AAwRJ;AAAA;AAAA;AAAA;AAAA,iBAxRI;AA2RJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBA3RI;AAgSJ;AAAA;AAAA;AAAA;AAAA,iBAhSI;AAmSJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBAnSI;AA8SJ;AAAA;AAAA;AAAA;AAAA,iBA9SI;AAiTJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBAjTI;AAkUJ;AAAA;AAAA;AAAA;AAAA,iBAlUI;AAqUJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ;AArUI,aAAR;AA8UH;;;EAhVuC,gBAAMC,S;;kBAA7BD,c","file":"1.3e78.bundle.js","sourcesContent":["import React from \"react\";\nimport { jumpToById } from \"react-sidenav2\";\nexport default class GettingStarted extends React.Component {\n    render() {\n        return (<div>\n            <strong>\n                项目结构\n            </strong>\n            <pre>\n                <code>\n                    {\n                        `\n     |- getting-started\n     |     |\n     |     |- GettingStarted.jsx\n     |\n     |- home\n     |     |\n     |     |- Home.jsx\n     |\n     |- sidenav-home\n     |     |\n     |     |- modules\n     |     |     |\n     |     |     |- sidenav-option\n     |     |            |\n     |     |            |- SidenavOption.jsx\n     |     |\n     |     |- SidenavHome.jsx\n     |     \n     |- index.css\n     |\n     |- index.html\n     |\n     |- index.jsx\n    `\n                    }\n                </code>\n            </pre>\n            <strong>\n                index.html结构\n            </strong>\n            <pre>\n                <code>\n                    {`\n    <div id=\"sidenav\" class=\"sidenav-container\"></div>\n    <div class=\"content\">\n        <div id=\"topnav\" class=\"topnav-container\"></div>\n        <div id=\"crumbnav\" class=\"crumbnav-container\"></div>\n        <div id=\"main\" class=\"main\"></div>\n    </div>`}\n                </code>\n            </pre>\n            <strong>\n                注意\n            </strong>\n            <p>\n                \n            </p>\n            <b>整个组件没有提供任何样式,\n                样式需要开发者自己书写,\n                实际项目中请自己定义合适的样式,\n                下面是示例中使用的所有的样式\n            </b>\n            <pre>\n            <code>\n                {`/* 侧边导航 */\n.sidenav-container{\n    position: fixed;\n    width: 220px;\n    border-right: 1px solid #f3f3f3;\n    padding-right: 20px;\n    height: 100%;\n}\n.sidenav-ul{\n    list-style: none;\n    padding-left: 0;\n    margin:0;\n}\n.sidenav-li{\n    padding-left: 10px;\n    line-height: 40px;\n}\n.sidenav-item{\n    padding-left: 10px;\n    border-radius: 8px;    \n}\n.sidenav-item-active{\n    background:lightpink;\n}\n/* 右侧容器 */\n.content{\n    margin-left: 240px;\n    overflow:auto;\n}\n/* 顶部导航 */\n.topnav-container{\n    background: #00B7AC;\n    overflow: auto;\n    white-space: nowrap;\n}\n.topnav-item{\n    padding:17px;\n    color:white;\n    display:inline-block;\n    cursor: pointer;\n}\n.topnav-item-active{\n    background: #159E96;\n}\n.topnav-close{\n    margin-left: 4px;\n}\n.topnav-item:not(:hover) .topnav-close{\n    visibility: hidden;\n}\n/* 面包屑导航 */\n.crumbnav-container{\n    padding: 8px 15px;\n    margin-bottom: 20px;\n    background-color: #f5f5f5;\n    color: #337ab7;\n}\n.crumbnav-item{\n    cursor: pointer;\n}\n.crumbnav-item+.crumbnav-item::before{\n    padding: 0 5px;\n    color: #ccc;\n    content: \"/\\00a0\";\n}\n.crumbnav-item:last-child{\n    color:#777;\n}\n/* 为了写文档,额外的样式 */\npre{\n    padding: 1.25rem 1.5rem;\n    line-height: 1.25;\n    background: #f3f3f3;\n    border-radius: 3px;\n    overflow-x: auto;\n    font-family: monospace,monospace;\n}`}\n            </code>\n            </pre>\n            \n            <strong>\n                安装\n            </strong>\n            <pre>\n                <code>\n                    npm install --save react-sidenav2\n                </code>\n            </pre>\n            <strong>\n                引入\n            </strong>\n            <pre>\n                <code>\n                    {`import {setup,jumpToById,jumpTo,createSidenav,createTopnav,createSidenavPanel,createCrumbnav} from \"react-sidenav2\";`}\n                </code>\n            </pre>\n            <strong>\n                定义导航数据\n            </strong>\n            <pre>\n                <code>\n                    {\n                        `let data = [{\n                id: \"-1\",\n                path: \"/\",\n                name: \"简介\",\n                loader: () => import('./home/Home')\n            },{\n                id: \"0\",\n                path: \"/getting_started\",\n                name: \"开始使用\",\n                loader: () => import('./getting-started/GettingStarted')\n            }, {\n                id: \"1\",\n                path: \"/sidenav_home\",\n                name: \"Sidenav简介\",\n                loader: () => import('./sidenav-home/SidenavHome'),\n                children: [{\n                    id: \"11\",\n                    path: \"/sidenav_option\",\n                    name: \"Sidenav配置\",\n                    loader: () => import('./sidenav-home/modules/sidenav-option/SidenavOption')\n                }]\n            }];`\n                    }\n                </code>\n            </pre>\n            <strong>\n                关闭页签时的询问函数\n            </strong>\n            <pre>\n                <code>\n                    {`const getUserConfirmation = function (prompt, resolve, reject) {\n    if (prompt) {\n        const result = window.confirm(prompt);\n        result ? resolve() : reject();\n    } else {\n        resolve();\n    }\n};`}\n                </code>\n            </pre>\n            <strong>\n                页面加载时使用的加载页\n            </strong>\n            <pre>\n                <code>\n                    {`const Loading=({navData})=>{\n    return (\n        <div>\n            {navData.name}页加载中...\n        </div>\n    )\n};`}\n                </code>\n            </pre>\n            <strong>\n                初始化导航组件\n            </strong>\n            <pre>\n                <code>\n                    {`setup({\n    data: data,\n    history: createHashHistory(),\n    nestedProp: \"children\",\n    getUserConfirmation:getUserConfirmation,\n    Loading:Loading,\n    panelClassName:\"panel\",\n    topnavActiveClassName:\"topnav-item-active\"\n});`}\n                </code>\n            </pre>\n            <strong>\n                生成侧边导航组件\n            </strong>\n            <pre>\n                <code>\n                    {`const Sidenav = createSidenav();`}\n                </code>\n            </pre>\n            <strong>\n                侧边导航定义格式\n            </strong>\n            <pre>\n                <code>\n                    {`class SidenavFormatter extends React.Component {\n    handler() {\n        const { item } = this.props;\n        jumpToById({routeId:item.id});\n    }\n    render() {\n        const { item, match } = this.props;\n        return (\n            <div\n                className={classnames(\"sidenav-item\", { \"sidenav-item-active\": match && match.isExact })}\n                onClick={\n                    this.handler.bind(this)\n                }\n            >\n                {item.name}\n            </div>\n        )\n    }\n}`}\n                </code>\n            </pre>\n            <strong>\n                挂载侧边导航组件\n            </strong>\n            <pre>\n                <code>\n                    {`render(<Sidenav\n    Formatter={SidenavFormatter}\n    ulClassName={\"sidenav-ul\"}\n    liClassName={\"sidenav-li\"}\n/>, document.querySelector(\"#sidenav\"));`}\n                </code>\n            </pre>\n            <strong>\n                生成导航面板组件\n            </strong>\n            <pre>\n                <code>\n                    {`const SidenavPanel = createSidenavPanel();`}\n                </code>\n            </pre>\n            <strong>\n                无导航面板被选中时展示的面板\n            </strong>\n            <pre>\n                <code>\n                    {`class EmptyPanel extends React.Component {\n    render() {\n        return <div>\n            请从左侧导航选择模块\n        </div>\n    }\n}`}\n                </code>\n            </pre>\n            <strong>\n                导航路径错误时展示的面板\n            </strong>\n            <pre>\n                <code>\n                    {`class NoMatchPanel extends React.Component {\n    render() {\n        const { pathname, history } = this.props;\n        return <div>\n            无法找到路径\"{pathname}\"!\n            <button onClick={\n                () => {\n                    history.goBack();\n                }\n            }>退后</button>\n        </div>\n    }\n}`}\n                </code>\n            </pre>\n            <strong>\n                挂载导航面板\n            </strong>\n            <pre>\n                <code>\n                    {`render(<SidenavPanel\n    EmptyPanel={EmptyPanel}\n    NoMatchPanel={NoMatchPanel}\n/>, document.querySelector(\"#main\"));`}\n                </code>\n            </pre>\n        </div>)\n    }\n} "],"sourceRoot":""}